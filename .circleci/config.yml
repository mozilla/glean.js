# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

---

version: 2.1

jobs:
  lint:
    docker:
      - image: cimg/node:16.1.0
    steps:
      - checkout
      - run:
          name: Check that package-lock.json is updated as needed
          command: |
            npm install --prefix ./glean --package-lock-only
            if ! git diff --exit-code HEAD -- glean/package-lock.json; then
              echo "=================================================="
              echo "The committed package-lock.json is out-dated."
              echo "Please regenerate package-lock.json using"
              echo "    npm i --package-lock-only"
              echo "Commit the modified file and push."
              echo "=================================================="
              exit 1
            fi
      - run:
          name: Install JavaScript dependencies
          command: npm --prefix ./glean install
      - run:
          name: Run linter
          command: npm --prefix ./glean run lint
      - run:
          name: Run circular dependencies checker
          command: npm --prefix ./glean run lint:circular-deps

  test:
    docker:
      - image: cimg/python:3.9.4-node
    steps:
      - checkout
      - run:
          name: Install Firefox related dependencies
          command: |
            sudo add-apt-repository ppa:ubuntu-mozilla-daily/ppa
            sudo apt update
            sudo apt install firefox-trunk
      - run:
          name: Install JavaScript dependencies
          command: npm --prefix ./glean install
      - run:
          name: Run unit tests
          command: export PATH=.:$PATH && npm --prefix ./glean run test:unit
      - run:
          name: Run integration tests
          command: export PATH=.:$PATH && npm --prefix ./glean run test:integration

  samples-tests:
    docker:
      - image: cimg/python:3.8.8-node
    steps:
      - checkout
      - run:
          name: Install JavaScript dependencies for Glean
          command: npm --prefix ./glean install
      - run:
          name: Build & link Glean.js to use it in the samples
          command: |
              npm --prefix ./glean run build:webext
              npm --prefix ./glean run build:cli
              npm --prefix ./glean link
      # JS sample related jobs
      - run:
          name: Install JavaScript dependencies for the JS sample
          command: |
              npm --prefix ./samples/web-extension/javascript install
              npm --prefix ./samples/web-extension/javascript link @mozilla/glean
      - run:
          name: Build the JS sample
          command: |
            npm --prefix ./samples/web-extension/javascript run build
      - run:
          name: Run JS sample test
          command: |
            export PATH=.:$PATH && npm --prefix ./samples/web-extension/javascript run test
      # TS sample related jobs
      - run:
          name: Install Typescript dependencies for the TS sample
          command: |
              npm --prefix ./samples/web-extension/typescript install
              npm --prefix ./samples/web-extension/typescript link @mozilla/glean
      - run:
          name: Build the TS sample
          command: |
            npm --prefix ./samples/web-extension/typescript run build
      - run:
          name: Run TS sample test
          command: |
            export PATH=.:$PATH && npm --prefix ./samples/web-extension/typescript run test

  check-size:
    docker:
      - image: cimg/node:16.1.0
    steps:
      - checkout
      - run:
          name: Get and post build sizes to GitHub PR
          command: bin/build-size-check.sh

  check-qt-js:
    docker:
      - image: cimg/python:3.9.4-node
    steps:
      - checkout
      - run:
          name: Install JavaScript dependencies and build Glean.js for Qt
          command: |
            npm --prefix ./glean install
            npm --prefix ./glean run build:qt
      - run:
          name: Setup Qt dependency
          command: |
            # The following commands are copied from the VPN Qt setup for Linux
            # See: https://github.com/mozilla-mobile/mozilla-vpn-client/blob/main/.github/workflows/linux.yaml#L18-L21
            #
            # Add external PPA, latest version of QT is 5.12.x for Ubuntu 20.04
            sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-focal -y
            sudo apt update
            sudo apt install git qt515tools qt515svg qt515networkauth-no-lgpl qt515charts-no-lgpl libgl-dev libpolkit-gobject-1-dev devscripts debhelper cdbs quilt qt515graphicaleffects qt515imageformats  qt515quickcontrols2   libxcb-image0-dev libxcb-shape0-dev libxcb-sync0-dev libxcb-render-util0-dev libxcb-xfixes0-dev libxcb-icccm4-dev libx11-xcb-dev libxcb-keysyms1-dev libasound2-dev libaudio-dev libcups2-dev libdbus-1-dev libglu1-mesa-dev  libmng-dev libtiff5-dev libxcursor-dev libxi-dev libxinerama-dev libxmu-dev libxrandr-dev libxv-dev libedit-dev libvulkan-dev qt515websockets -y
      - run:
          name: Run the Qt sample app and check for errors
          command: |
            cd samples/qt-qml-app
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            glean_parser translate metrics.yaml pings.yaml -f javascript -o generated \
            --option platform=qt --option version="0.15";

            sudo apt-get install xvfb
            xvfb-run python main.py &> qml.log &
            # Wait for app to start
            sleep 10
            if ! grep -q "Initialized Glean succesfully." "qml.log"; then
              echo "\n\n\033[1;91m** Failed to initialize Glean in Qt! See more logs below. **\033[0m\n\n"
              cat qml.log
              exit 1
            fi

  # via https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/
  docs-deploy:
    docker:
      - image: cimg/node:16.1.0
    steps:
      - checkout
      - run:
          name: Install JavaScript dependencies
          command: npm --prefix ./glean install
      - run:
          name: Build documentation
          command: npm --prefix ./glean run build:docs
      - run:
          name: Disable jekyll builds
          command: touch glean/dist/docs/.nojekyll
      - run:
          name: Show contents
          command: ls -R glean/dist/docs
      # Needed for write access to the GitHub repository;
      # see https://circleci.com/docs/2.0/gh-bb-integration/#deployment-keys-and-user-keys
      - add_ssh_keys:
          fingerprints:
            - "0c:0b:f8:f0:45:60:92:79:60:34:b2:12:9c:55:1d:fa"
      # The gh-pages npm package can be used to push a directory to a git branch;
      # see https://www.npmjs.com/package/gh-pages
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            git config user.email "brizental@mozilla.com"
            git config user.name "brizental"
            npm --prefix ./glean run publish:docs

  publish:
    docker:
      - image: cimg/node:16.1.0
    steps:
      - checkout
      - run:
          name: Install JavaScript dependencies
          command: npm --prefix ./glean install
      - run:
          name: NPM Authentication
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > glean/.npmrc
      - run:
          name: Publish to npm
          command: export PATH=.:$PATH && (cd glean && npm publish --access public)
      - run:
          name: Get ghr release tool
          command: |
            GHR=ghr_v0.13.0_linux_amd64
            GHR_SHA256=c428627270ae26e206cb526cb8c7bdfba475dd278f6691ddaf863355adadfa13
            curl -sfSL --retry 5 -O "https://github.com/tcnksm/ghr/releases/download/v0.13.0/${GHR}.tar.gz"
            echo "${GHR_SHA256} *${GHR}.tar.gz" | sha256sum -c -
            tar -xf "${GHR}.tar.gz"
            cp ./${GHR}/ghr ghr
      - run:
          name: Publish to Github
          command: |
            # Attach Qt build to release
            npm --prefix ./glean install
            npm --prefix ./glean run build:qt
            tar -zcvf "glean/dist/glean_js-${CIRCLE_TAG}-qt.tar.gz" glean/dist/qt
            ./ghr -u mozilla -replace ${CIRCLE_TAG} glean/dist/glean_js-${CIRCLE_TAG}-qt.tar.gz

  test-ssh:
    docker:
      - image: cimg/node:16.1.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - "0c:0b:f8:f0:45:60:92:79:60:34:b2:12:9c:55:1d:fa"
      - run:
          name: Push to test branch
          command: |
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            git config --global user.name "Test"
            git config --global user.email "test@mozilla.com"
            git clone git@github.com:mozilla/glean.js
            cd glean.js
            git checkout -b test
            touch test_file.txt
            git add .
            git commit -m "Auto-push [ci skip]" \
              && git push origin test

workflows:
  version: 2
  ci:
    jobs:
      - test-ssh
      - lint
      - test
      - check-qt-js
      - samples-tests
      - docs-deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - publish:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      # Comment this job away until Bug 1681899 is resolved.
      # - check-size:
      #     filters:
      #       branches:
      #         ignore: main
